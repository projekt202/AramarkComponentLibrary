import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../typography/typography.component";
export class ArrowLinkComponent {
    constructor() {
        this.title = "";
        this.url = "";
        this.target = "_self";
    }
}
ArrowLinkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ArrowLinkComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ArrowLinkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ArrowLinkComponent, selector: "aus-arrow-link", inputs: { title: "title", url: "url", target: "target", underline: "underline" }, ngImport: i0, template: "<a\n  [href]=\"url\"\n  [target]=\"target\"\n  class=\"arrow-link\"\n  [ngClass]=\"{\n    'arrow-link--underlined': underline\n  }\"\n>\n  <aus-typography [text]=\"title\" variant=\"p-md\"></aus-typography>\n  <svg\n    width=\"24\"\n    height=\"19\"\n    viewBox=\"0 0 24 19\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g>\n      <path\n        d=\"M14.5 0.5L23.5 9.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M14.5 18.5L23.5 9.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M0.5 9.5H23.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath>\n        <rect width=\"24\" height=\"19\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n</a>\n", styles: [".arrow-link{text-decoration:none;display:inline-flex;align-items:center;justify-content:flex-start}.arrow-link ::ng-deep aus-typography{margin-right:12px}.arrow-link ::ng-deep aus-typography .typography{line-height:1;white-space:nowrap}.arrow-link ::ng-deep svg{transition:all .25s}.arrow-link:hover svg{transform:translate(3px)}.arrow-link--underlined{text-decoration:underline}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i2.TypographyComponent, selector: "aus-typography", inputs: ["text", "for", "color", "weight", "tag", "variant", "disabled", "route", "href", "idName", "loading", "loadingData"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ArrowLinkComponent, decorators: [{
            type: Component,
            args: [{ selector: "aus-arrow-link", template: "<a\n  [href]=\"url\"\n  [target]=\"target\"\n  class=\"arrow-link\"\n  [ngClass]=\"{\n    'arrow-link--underlined': underline\n  }\"\n>\n  <aus-typography [text]=\"title\" variant=\"p-md\"></aus-typography>\n  <svg\n    width=\"24\"\n    height=\"19\"\n    viewBox=\"0 0 24 19\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g>\n      <path\n        d=\"M14.5 0.5L23.5 9.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M14.5 18.5L23.5 9.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M0.5 9.5H23.5\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath>\n        <rect width=\"24\" height=\"19\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n</a>\n", styles: [".arrow-link{text-decoration:none;display:inline-flex;align-items:center;justify-content:flex-start}.arrow-link ::ng-deep aus-typography{margin-right:12px}.arrow-link ::ng-deep aus-typography .typography{line-height:1;white-space:nowrap}.arrow-link ::ng-deep svg{transition:all .25s}.arrow-link:hover svg{transform:translate(3px)}.arrow-link--underlined{text-decoration:underline}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { title: [{
                type: Input
            }], url: [{
                type: Input
            }], target: [{
                type: Input
            }], underline: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyb3ctbGluay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtYXVzLWRlc2lnbi1zeXN0ZW0vc3JjL2xpYi9zaGFyZWQvY29tcG9uZW50cy9hcnJvdy1saW5rL2Fycm93LWxpbmsuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWF1cy1kZXNpZ24tc3lzdGVtL3NyYy9saWIvc2hhcmVkL2NvbXBvbmVudHMvYXJyb3ctbGluay9hcnJvdy1saW5rLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUWpELE1BQU0sT0FBTyxrQkFBa0I7SUFNN0I7UUFMUyxVQUFLLEdBQVcsRUFBRSxDQUFDO1FBQ25CLFFBQUcsR0FBVyxFQUFFLENBQUM7UUFDakIsV0FBTSxHQUEwQixPQUFPLENBQUM7SUFHbEMsQ0FBQzs7Z0hBTkwsa0JBQWtCO29HQUFsQixrQkFBa0Isd0lDUi9CLDY3QkEyQ0E7NEZEbkNhLGtCQUFrQjtrQkFMOUIsU0FBUzsrQkFDRSxnQkFBZ0I7MEVBS2pCLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxHQUFHO3NCQUFYLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudFRhcmdldCB9IGZyb20gXCIuLi9idXR0b24vYnV0dG9uLmNvbXBvbmVudC5tb2RlbFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwiYXVzLWFycm93LWxpbmtcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9hcnJvdy1saW5rLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi9hcnJvdy1saW5rLmNvbXBvbmVudC5zY3NzXCJdLFxufSlcbmV4cG9ydCBjbGFzcyBBcnJvd0xpbmtDb21wb25lbnQge1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nID0gXCJcIjtcbiAgQElucHV0KCkgdXJsOiBzdHJpbmcgPSBcIlwiO1xuICBASW5wdXQoKSB0YXJnZXQ6IEJ1dHRvbkNvbXBvbmVudFRhcmdldCA9IFwiX3NlbGZcIjtcbiAgQElucHV0KCkgdW5kZXJsaW5lPzogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG59XG4iLCI8YVxuICBbaHJlZl09XCJ1cmxcIlxuICBbdGFyZ2V0XT1cInRhcmdldFwiXG4gIGNsYXNzPVwiYXJyb3ctbGlua1wiXG4gIFtuZ0NsYXNzXT1cIntcbiAgICAnYXJyb3ctbGluay0tdW5kZXJsaW5lZCc6IHVuZGVybGluZVxuICB9XCJcbj5cbiAgPGF1cy10eXBvZ3JhcGh5IFt0ZXh0XT1cInRpdGxlXCIgdmFyaWFudD1cInAtbWRcIj48L2F1cy10eXBvZ3JhcGh5PlxuICA8c3ZnXG4gICAgd2lkdGg9XCIyNFwiXG4gICAgaGVpZ2h0PVwiMTlcIlxuICAgIHZpZXdCb3g9XCIwIDAgMjQgMTlcIlxuICAgIGZpbGw9XCJub25lXCJcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgPlxuICAgIDxnPlxuICAgICAgPHBhdGhcbiAgICAgICAgZD1cIk0xNC41IDAuNUwyMy41IDkuNVwiXG4gICAgICAgIHN0cm9rZT1cImJsYWNrXCJcbiAgICAgICAgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCJcbiAgICAgIC8+XG4gICAgICA8cGF0aFxuICAgICAgICBkPVwiTTE0LjUgMTguNUwyMy41IDkuNVwiXG4gICAgICAgIHN0cm9rZT1cImJsYWNrXCJcbiAgICAgICAgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCJcbiAgICAgIC8+XG4gICAgICA8cGF0aFxuICAgICAgICBkPVwiTTAuNSA5LjVIMjMuNVwiXG4gICAgICAgIHN0cm9rZT1cImJsYWNrXCJcbiAgICAgICAgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCJcbiAgICAgIC8+XG4gICAgPC9nPlxuICAgIDxkZWZzPlxuICAgICAgPGNsaXBQYXRoPlxuICAgICAgICA8cmVjdCB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMTlcIiBmaWxsPVwid2hpdGVcIiAvPlxuICAgICAgPC9jbGlwUGF0aD5cbiAgICA8L2RlZnM+XG4gIDwvc3ZnPlxuPC9hPlxuIl19